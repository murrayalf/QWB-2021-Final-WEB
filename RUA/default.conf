lua_package_path '/usr/local/openresty/lualib/resty/?.ljbc;;';

lua_ssl_verify_depth 2;
lua_ssl_trusted_certificate '/etc/ssl/certs/ca-certificates.crt';

log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent ';

server {
    listen       80;
    server_name  localhost;

    access_log  /usr/local/openresty/nginx/logs/access.log  main;
    access_log  /usr/local/openresty/nginx/logs/access2.log  main;

    location / {
        root   /usr/local/openresty/nginx/html;
        index  index.html index.htm index.php;
        try_files $uri $uri/ /index.php?$query_string;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/local/openresty/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    location ~ \.php$ {
            fastcgi_pass   unix:/dev/shm/php-cgi.sock;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include        fastcgi_params;
    }

    location /api {      
        default_type text/html;
        content_by_lua_block {
            local httpd = require "resty.http_dns"  
            ngx.req.read_body()  
            local args = ngx.req.get_uri_args()
            local headers = ngx.req.get_headers()
	    local post_data = ngx.req.get_body_data() 
            local url = args.url                    
            
			local domain = ngx.re.match(url, [[//([\S]+?)/]])                  http://127.0.0.1?a=http://sisselcbp.github.io/
            domain = (domain and 1 == #domain and domain[1]) or nil            

            if domain == "sisselcbp.github.io" then     
                local res = httpd:http_request_with_dns(url,{})                 http://sisselcbp.github.io/@127.0.0.1
                ngx.print(res.body)
            elseif domain == "r3kapig.com" then
                local res = httpd:http_request_with_dns(url,{
                    method = "POST",
                    body = post_data,
                    headers = {
                        ["Content-Type"] = headers["Content-Type"]
                    }
                })                
                ngx.print(res.body)   
            else         
                ngx.print("Error! Try it local to read the log!") 
            end    
        }
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
